"""updated lenght of string

Revision ID: 5c9319d59e3a
Revises: 742af4c7352f
Create Date: 2025-07-25 10:44:20.337959

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '5c9319d59e3a'
down_revision: Union[str, Sequence[str], None] = '742af4c7352f'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('idx_vehicle_observations_plate_hash'), table_name='vehicle_observations', schema='ingestion_schema')
    op.drop_index(op.f('idx_vehicle_observations_timestamp'), table_name='vehicle_observations', schema='ingestion_schema')
    op.drop_table('vehicle_observations', schema='ingestion_schema')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('vehicle_observations',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('timestamp', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('plate_hash', postgresql.BYTEA(), autoincrement=False, nullable=False),
    sa.Column('country', sa.VARCHAR(length=5), autoincrement=False, nullable=True),
    sa.Column('vehicle_type', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('orientation', postgresql.ENUM('FRONT', 'REAR', name='vehicle_orientation'), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('vehicle_observations_pkey')),
    schema='ingestion_schema'
    )
    op.create_index(op.f('idx_vehicle_observations_timestamp'), 'vehicle_observations', ['timestamp'], unique=False, schema='ingestion_schema')
    op.create_index(op.f('idx_vehicle_observations_plate_hash'), 'vehicle_observations', ['plate_hash'], unique=False, schema='ingestion_schema')
    # ### end Alembic commands ###
