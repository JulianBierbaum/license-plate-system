services:
  analytics-service:
    image: julianbierbaum/license-plate-system:analytics-service
    ports:
      - "5001:5000"
    environment:
      DB_HOST: ${DB_HOST}
      DB_PORT: 5432
      DB_NAME: ${DB_NAME}
      DB_USER: ${ANALYTICS_DB_USER}
      DB_PASSWORD: ${ANALYTICS_DB_PASSWORD}
      ANALYTICS_SCHEMA: ${ANALYTICS_SCHEMA}
      LOG_LEVEL: ${LOG_LEVEL}
    depends_on:
      db-prestart:
        condition: service_completed_successfully
    restart: unless-stopped

  auth-service:
    image: julianbierbaum/license-plate-system:auth-service
    ports:
      - "5002:5000"
    environment:
      ACTIVE_DIRECTORY_URL: ${ACTIVE_DIRECTORY_URL}
      LOG_LEVEL: ${LOG_LEVEL}
    depends_on:
      db-prestart:
        condition: service_completed_successfully
    restart: unless-stopped

  data-collection-service:
    image: julianbierbaum/license-plate-system:data-collection-service
    ports:
      - "5003:5000"
    volumes:
      - ${SAVE_DIR}:/app/snapshots:rw
    environment:
      DB_HOST: ${DB_HOST}
      DB_PORT: 5432
      DB_NAME: ${DB_NAME}
      DB_USER: ${DATA_COLLECTION_DB_USER}
      DB_PASSWORD: ${DATA_COLLECTION_DB_PASSWORD}
      DATA_COLLECTION_SCHEMA: ${DATA_COLLECTION_SCHEMA}
      LOG_LEVEL: ${LOG_LEVEL}
      SYNOLOGY_HOST: ${SYNOLOGY_HOST}
      SYNOLOGY_USERNAME: ${SYNOLOGY_USERNAME}
      SYNOLOGY_PASSWORD: ${SYNOLOGY_PASSWORD}
      API_KEY: ${PLATE_RECOGNIZER_API_KEY}
      SAVE_IMAGES_FOR_DEBUG: ${SAVE_IMAGES_FOR_DEBUG}
      INTERVAL_SECONDS: ${INTERVAL_SECONDS}
    depends_on:
      db-prestart:
        condition: service_completed_successfully
    restart: unless-stopped

  notification-service:
    image: julianbierbaum/license-plate-system:notification-service
    ports:
      - "5004:5000"
    environment:
      DB_HOST: ${DB_HOST}
      DB_PORT: 5432
      DB_NAME: ${DB_NAME}
      DB_USER: ${NOTIFICATION_DB_USER}
      DB_PASSWORD: ${NOTIFICATION_DB_PASSWORD}
      NOTIFICATION_SCHEMA: ${NOTIFICATION_SCHEMA}
      LOG_LEVEL: ${LOG_LEVEL}
      ANALYTICS_SERVICE_URL: ${ANALYTICS_SERVICE_URL}
      SENDER_ADDRESS: ${SENDER_ADDRESS}
    depends_on:
      db-prestart:
        condition: service_completed_successfully
    restart: unless-stopped

  web-service:
    image: julianbierbaum/license-plate-system:web-service
    ports:
      - "3000:3000"
    environment:
      AUTH_SERVICE_URL: ${AUTH_SERVICE_URL}
      ANALYTICS_SERVICE_URL: ${ANALYTICS_SERVICE_URL}
      NOTIFICATION_SERVICE_URL: ${NOTIFICATION_SERVICE_URL}
    depends_on:
      db-prestart:
        condition: service_completed_successfully
    restart: unless-stopped

  plate-recognizer:
    image: platerecognizer/alpr:latest
    volumes:
      - license:/license
    environment:
      LICENSE_KEY: ${LICENSE_KEY}
      TOKEN: ${PLATE_RECOGNIZER_API_KEY}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s
    depends_on:
      db-prestart:
        condition: service_completed_successfully
    restart: unless-stopped

  db-prestart:
    image: julianbierbaum/license-plate-system:db-prestart
    environment:
      DB_HOST: ${DB_HOST}
      DB_PORT: 5432
      DB_NAME: ${DB_NAME}
      DB_USER: ${POSTGRES_ADMIN_USER}
      DB_PASSWORD: ${POSTGRES_ADMIN_PASSWORD}
      ANALYTICS_DB_PASSWORD: ${ANALYTICS_DB_PASSWORD}
      DATA_COLLECTION_DB_PASSWORD: ${DATA_COLLECTION_DB_PASSWORD}
      NOTIFICATION_DB_PASSWORD: ${NOTIFICATION_DB_PASSWORD}
      DATA_COLLECTION_SCHEMA: ${DATA_COLLECTION_SCHEMA}
      ANALYTICS_SCHEMA: ${ANALYTICS_SCHEMA}
      NOTIFICATION_SCHEMA: ${NOTIFICATION_SCHEMA}
    depends_on:
      postgres:
        condition: service_healthy

  postgres:
    image: postgres:14-alpine
    environment:
      POSTGRES_USER: ${POSTGRES_ADMIN_USER}
      POSTGRES_PASSWORD: ${POSTGRES_ADMIN_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "${DB_PORT_EXTERNAL}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_ADMIN_USER} -d ${DB_NAME}"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped

  postgres-backup:
    image: julianbierbaum/license-plate-system:db-backup
    volumes:
      - ${BACKUP_DIR}:/backups:rw
    environment:
      DB_HOST: ${DB_HOST}
      DB_PORT: 5432
      DB_NAME: ${DB_NAME}
      DB_USER: ${POSTGRES_ADMIN_USER}
      DB_PASSWORD: ${POSTGRES_ADMIN_PASSWORD}
      BACKUP_RETENTION_DAYS: ${BACKUP_RETENTION_DAYS}
      BACKUP_SCHEDULE: ${BACKUP_SCHEDULE}
    depends_on:
      db-prestart:
        condition: service_completed_successfully
    restart: unless-stopped

volumes:
  postgres_data:
  license:
